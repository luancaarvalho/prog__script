import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { PlaygroundCommonModule } from './playground-common.module';
import { MIDDLEWARE } from '../lib/middlewares';
import { initializePlayground } from '../lib/initialize-playground';
import { BehaviorSubject } from 'rxjs';
const _middleware = new BehaviorSubject({
    selector: null,
    overlay: false,
    modules: [],
});
const middleware = _middleware.asObservable();
const ɵ0 = middleware;
let PlaygroundModule = class PlaygroundModule {
    static configure(configuration) {
        initializePlayground(configuration.selector);
        _middleware.next(Object.assign(Object.assign({}, _middleware.value), configuration));
        return this;
    }
};
PlaygroundModule = __decorate([
    NgModule({
        imports: [
            BrowserModule,
            PlaygroundCommonModule,
        ],
        providers: [
            { provide: MIDDLEWARE, useValue: ɵ0 },
        ],
        exports: [
            PlaygroundCommonModule
        ]
    })
], PlaygroundModule);
export { PlaygroundModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheWdyb3VuZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBsYXlncm91bmQvIiwic291cmNlcyI6WyJsaWIvY29yZS9wbGF5Z3JvdW5kLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFjLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzVELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFJdkMsTUFBTSxXQUFXLEdBQUcsSUFBSSxlQUFlLENBQWE7SUFDaEQsUUFBUSxFQUFFLElBQUk7SUFDZCxPQUFPLEVBQUUsS0FBSztJQUNkLE9BQU8sRUFBRSxFQUFFO0NBQ2QsQ0FBQyxDQUFDO0FBQ0gsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLFlBQVksRUFBRSxDQUFDO1dBUUwsVUFBVTtBQU1uRCxJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtJQUN6QixNQUFNLENBQUMsU0FBUyxDQUFDLGFBQXlCO1FBQ3RDLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxXQUFXLENBQUMsSUFBSSxpQ0FBTSxXQUFXLENBQUMsS0FBSyxHQUFLLGFBQWEsRUFBRyxDQUFDO1FBQzdELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSixDQUFBO0FBTlksZ0JBQWdCO0lBWjVCLFFBQVEsQ0FBQztRQUNOLE9BQU8sRUFBRTtZQUNMLGFBQWE7WUFDYixzQkFBc0I7U0FDekI7UUFDRCxTQUFTLEVBQUU7WUFDUCxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxJQUFZLEVBQUU7U0FDaEQ7UUFDRCxPQUFPLEVBQUU7WUFDUCxzQkFBc0I7U0FDdkI7S0FDSixDQUFDO0dBQ1csZ0JBQWdCLENBTTVCO1NBTlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IFBsYXlncm91bmRDb21tb25Nb2R1bGUgfSBmcm9tICcuL3BsYXlncm91bmQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBNaWRkbGV3YXJlLCBNSURETEVXQVJFIH0gZnJvbSAnLi4vbGliL21pZGRsZXdhcmVzJztcbmltcG9ydCB7IGluaXRpYWxpemVQbGF5Z3JvdW5kIH0gZnJvbSAnLi4vbGliL2luaXRpYWxpemUtcGxheWdyb3VuZCc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZGVjbGFyZSBsZXQgcmVxdWlyZTogYW55O1xuXG5jb25zdCBfbWlkZGxld2FyZSA9IG5ldyBCZWhhdmlvclN1YmplY3Q8TWlkZGxld2FyZT4oe1xuICAgIHNlbGVjdG9yOiBudWxsLFxuICAgIG92ZXJsYXk6IGZhbHNlLFxuICAgIG1vZHVsZXM6IFtdLFxufSk7XG5jb25zdCBtaWRkbGV3YXJlID0gX21pZGRsZXdhcmUuYXNPYnNlcnZhYmxlKCk7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBCcm93c2VyTW9kdWxlLFxuICAgICAgICBQbGF5Z3JvdW5kQ29tbW9uTW9kdWxlLFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogTUlERExFV0FSRSwgdXNlVmFsdWU6IG1pZGRsZXdhcmUgfSxcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgIFBsYXlncm91bmRDb21tb25Nb2R1bGVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFBsYXlncm91bmRNb2R1bGUge1xuICAgIHN0YXRpYyBjb25maWd1cmUoY29uZmlndXJhdGlvbjogTWlkZGxld2FyZSkge1xuICAgICAgICBpbml0aWFsaXplUGxheWdyb3VuZChjb25maWd1cmF0aW9uLnNlbGVjdG9yKTtcbiAgICAgICAgX21pZGRsZXdhcmUubmV4dCh7IC4uLl9taWRkbGV3YXJlLnZhbHVlLCAuLi5jb25maWd1cmF0aW9uIH0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXX0=