// https://github.com/bevacqua/fuzzysearch
export function fuzzySearch(needle, haystack) {
    let indexes = [];
    let hlen = haystack.length;
    let nlen = needle.length;
    if (nlen > hlen) {
        return null;
    }
    if (nlen === hlen) {
        return (needle === haystack)
            ? Array.apply(null, { length: nlen }).map(Number.call, Number)
            : null;
    }
    outer: for (let i = 0, j = 0; i < nlen; i++) {
        let nch = needle.charCodeAt(i);
        while (j < hlen) {
            if (haystack.charCodeAt(j++) === nch) {
                indexes.push(j - 1);
                continue outer;
            }
        }
        return null;
    }
    return indexes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnV6enktc2VhcmNoLmZ1bmN0aW9uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1wbGF5Z3JvdW5kLyIsInNvdXJjZXMiOlsibGliL2NvcmUvc2hhcmVkL2Z1enp5LXNlYXJjaC5mdW5jdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQ0FBMEM7QUFDMUMsTUFBTSxVQUFVLFdBQVcsQ0FBQyxNQUFjLEVBQUUsUUFBZ0I7SUFDeEQsSUFBSSxPQUFPLEdBQWEsRUFBRSxDQUFDO0lBQzNCLElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDM0IsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUN6QixJQUFJLElBQUksR0FBRyxJQUFJLEVBQUU7UUFDYixPQUFPLElBQUksQ0FBQztLQUNmO0lBQ0QsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO1FBQ2YsT0FBTyxDQUFDLE1BQU0sS0FBSyxRQUFRLENBQUM7WUFDeEIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDO1lBQzlELENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDZDtJQUNELEtBQUssRUFBRSxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDekMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvQixPQUFPLENBQUMsR0FBRyxJQUFJLEVBQUU7WUFDYixJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLEVBQUU7Z0JBQ2xDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNwQixTQUFTLEtBQUssQ0FBQzthQUNsQjtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7S0FDZjtJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vYmV2YWNxdWEvZnV6enlzZWFyY2hcbmV4cG9ydCBmdW5jdGlvbiBmdXp6eVNlYXJjaChuZWVkbGU6IHN0cmluZywgaGF5c3RhY2s6IHN0cmluZykge1xuICAgIGxldCBpbmRleGVzOiBudW1iZXJbXSA9IFtdO1xuICAgIGxldCBobGVuID0gaGF5c3RhY2subGVuZ3RoO1xuICAgIGxldCBubGVuID0gbmVlZGxlLmxlbmd0aDtcbiAgICBpZiAobmxlbiA+IGhsZW4pIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmIChubGVuID09PSBobGVuKSB7XG4gICAgICAgIHJldHVybiAobmVlZGxlID09PSBoYXlzdGFjaylcbiAgICAgICAgICAgID8gQXJyYXkuYXBwbHkobnVsbCwgeyBsZW5ndGg6IG5sZW4gfSkubWFwKE51bWJlci5jYWxsLCBOdW1iZXIpXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgfVxuICAgIG91dGVyOiBmb3IgKGxldCBpID0gMCwgaiA9IDA7IGkgPCBubGVuOyBpKyspIHtcbiAgICAgICAgbGV0IG5jaCA9IG5lZWRsZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB3aGlsZSAoaiA8IGhsZW4pIHtcbiAgICAgICAgICAgIGlmIChoYXlzdGFjay5jaGFyQ29kZUF0KGorKykgPT09IG5jaCkge1xuICAgICAgICAgICAgICAgIGluZGV4ZXMucHVzaChqIC0gMSk7XG4gICAgICAgICAgICAgICAgY29udGludWUgb3V0ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBpbmRleGVzO1xufVxuIl19