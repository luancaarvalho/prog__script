import { __decorate, __param } from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, QueryList, ViewChildren, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { EventManager } from '@angular/platform-browser';
import { StateService } from './shared/state.service';
import { UrlService } from './shared/url.service';
import { fuzzySearch } from './shared/fuzzy-search.function';
import { LevenshteinDistance } from './shared/levenshtein-distance';
import { SandboxLoader } from './shared/sandbox-loader';
import { MIDDLEWARE } from '../lib/middlewares';
import { Observable } from 'rxjs';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
let AppComponent = class AppComponent {
    constructor(stateService, urlService, eventManager, levenshteinDistance, changeDetectorRef, middleware) {
        this.stateService = stateService;
        this.urlService = urlService;
        this.eventManager = eventManager;
        this.levenshteinDistance = levenshteinDistance;
        this.changeDetectorRef = changeDetectorRef;
        this.middleware = middleware;
        this.commandBarActive = false;
        this.commandBarPreview = false;
        this.selectedSandboxAndScenarioKeys = { sandboxKey: null, scenarioKey: null };
        this.filter = new FormControl();
        this.shortcuts = this.getShortcuts();
        this.embed = false;
    }
    ngOnInit() {
        const sandboxMenuItems = SandboxLoader.getSandboxMenuItems();
        this.middleware
            .subscribe(middleware => this.activeMiddleware = middleware);
        this.embed = this.urlService.embed;
        if (this.embed) {
            this.selectedSandboxAndScenarioKeys = {
                sandboxKey: this.urlService.select.sandboxKey,
                scenarioKey: this.urlService.select.scenarioKey,
            };
        }
        else {
            if (this.urlService.select) {
                this.selectedSandboxAndScenarioKeys = {
                    sandboxKey: this.urlService.select.sandboxKey,
                    scenarioKey: this.urlService.select.scenarioKey,
                };
            }
            this.eventManager.addGlobalEventListener('window', 'keydown.control.p', this.blockEvent);
            this.eventManager.addGlobalEventListener('window', 'keydown.F2', this.blockEvent);
            this.eventManager.addGlobalEventListener('window', 'keyup.control.p', (event) => {
                this.blockEvent(event);
                this.toggleCommandBar();
            });
            this.eventManager.addGlobalEventListener('window', 'keyup.F2', (event) => {
                this.blockEvent(event);
                this.toggleCommandBar();
            });
            let filterValue = this.stateService.getFilter();
            this.totalSandboxes = sandboxMenuItems.length;
            this.filteredSandboxMenuItems = this.filterSandboxes(sandboxMenuItems, filterValue);
            this.filter.setValue(filterValue);
            this.filter.valueChanges.pipe(debounceTime(300), distinctUntilChanged())
                .subscribe(value => {
                this.stateService.setFilter(value);
                this.filteredSandboxMenuItems = this.filterSandboxes(sandboxMenuItems, value);
                if (!value) {
                    this.selectScenario(null, null);
                }
            });
        }
        // expose select scenario functionality for visual regression test
        window.loadScenario = (sandboxKey, scenarioKey) => {
            this.selectScenario(sandboxKey, scenarioKey);
            this.changeDetectorRef.detectChanges();
        };
        // set flag to check when component is loaded
        window.isPlaygroundComponentLoaded = () => false;
        window.isPlaygroundComponentLoadedWithErrors = () => false;
    }
    onFilterBoxArrowDown(event, switchToScenario = false) {
        event.preventDefault();
        let elementRef;
        const currentIndex = this.findCurrentScenarioIndex();
        if (currentIndex) {
            elementRef = this.focusScenarioLinkElement(currentIndex + 1);
        }
        else {
            elementRef = this.focusScenarioLinkElement(0);
        }
        if (switchToScenario) {
            this.showScenario(elementRef);
        }
    }
    onFilterBoxArrowUp(event, switchToScenario = false) {
        event.preventDefault();
        let elementRef;
        const currentIndex = this.findCurrentScenarioIndex();
        if (currentIndex) {
            elementRef = this.focusScenarioLinkElement(currentIndex - 1);
        }
        else if (this.scenarioLinkElements.length > 0) {
            elementRef = this.focusScenarioLinkElement(this.scenarioLinkElements.length - 1);
        }
        if (switchToScenario) {
            this.showScenario(elementRef);
        }
    }
    onScenarioLinkKeyDown(scenarioElement, filterElement, event) {
        event.preventDefault();
        switch (event.key) {
            case 'Up':
            case 'ArrowUp':
                this.goUp(scenarioElement);
                break;
            case 'Down':
            case 'ArrowDown':
                this.goDown(scenarioElement);
                break;
            default:
                if (event.key !== 'Escape' && event.key !== 'Enter') {
                    if (event.key.length === 1) {
                        this.filter.setValue(`${this.filter.value}${event.key}`);
                    }
                    filterElement.focus();
                }
                break;
        }
    }
    onScenarioLinkKeyUp(scenarioElement, event) {
        event.preventDefault();
        switch (event.key) {
            case 'Escape':
                this.commandBarActive = false;
                break;
            case 'Enter':
                scenarioElement.click();
                break;
        }
    }
    onScenarioLinkControlDown(scenarioElement, event) {
        if (!this.commandBarActive)
            return;
        event.preventDefault();
        let elementRef = this.goDown(scenarioElement);
        this.showScenario(elementRef);
    }
    onScenarioLinkControlUp(scenarioElement, event) {
        if (!this.commandBarActive)
            return;
        event.preventDefault();
        let elementRef = this.goUp(scenarioElement);
        this.showScenario(elementRef);
    }
    onCommandBarStartPreview(event) {
        event.preventDefault();
        this.commandBarPreview = true;
    }
    onCommandBarStopPreview() {
        this.commandBarPreview = false;
    }
    onScenarioClick(sandboxKey, scenarioKey, event) {
        event.preventDefault();
        this.selectScenario(sandboxKey, scenarioKey);
    }
    isSelected(sandbox, scenario) {
        return this.selectedSandboxAndScenarioKeys.scenarioKey === scenario.key
            && this.selectedSandboxAndScenarioKeys.sandboxKey.toLowerCase() === sandbox.key.toLowerCase();
    }
    toggleCommandBar() {
        this.commandBarActive = !this.commandBarActive;
    }
    blockEvent(e) {
        e.preventDefault();
        e.stopPropagation();
    }
    showScenario(selectedScenarioElementRef) {
        if (selectedScenarioElementRef) {
            this.selectScenario(selectedScenarioElementRef.nativeElement.getAttribute('sandboxMenuItemKey'), parseInt(selectedScenarioElementRef.nativeElement.getAttribute('scenarioMenuItemkey'), 10));
        }
    }
    findCurrentScenarioIndex() {
        let currentIndex;
        if (this.scenarioLinkElements.length > 0) {
            this.scenarioLinkElements.map((element, i) => {
                if (element.nativeElement.className.includes('selected')) {
                    currentIndex = i;
                }
            });
        }
        return currentIndex;
    }
    goUp(scenarioElement) {
        let currentIndex = -1;
        this.scenarioLinkElements.forEach((scenarioElementRef, index) => {
            if (scenarioElementRef.nativeElement === scenarioElement) {
                currentIndex = index;
            }
        });
        if (currentIndex === 0) {
            return this.focusScenarioLinkElement(this.scenarioLinkElements.length - 1);
        }
        else {
            return this.focusScenarioLinkElement(currentIndex - 1);
        }
    }
    goDown(scenarioElement) {
        let currentIndex = -1;
        this.scenarioLinkElements.forEach((scenarioElementRef, index) => {
            if (scenarioElementRef.nativeElement === scenarioElement) {
                currentIndex = index;
            }
        });
        if (currentIndex === this.scenarioLinkElements.length - 1) {
            return this.focusScenarioLinkElement(0);
        }
        else {
            return this.focusScenarioLinkElement(currentIndex + 1);
        }
    }
    focusScenarioLinkElement(index) {
        if (this.scenarioLinkElements.toArray()[index]) {
            let elementRef = this.scenarioLinkElements.toArray()[index];
            elementRef.nativeElement.focus();
            return elementRef;
        }
    }
    filterSandboxes(sandboxMenuItems, filter) {
        if (!filter) {
            return sandboxMenuItems.map((item, i) => Object.assign({}, item, { tabIndex: i }));
        }
        let tabIndex = 0;
        let filterNormalized = filter.toLowerCase();
        return sandboxMenuItems
            .reduce((accum, curr) => {
            let searchKeyNormalized = curr.searchKey.toLowerCase();
            let indexMatches = fuzzySearch(filterNormalized, searchKeyNormalized);
            if (indexMatches) {
                let weight = this.levenshteinDistance.getDistance(filterNormalized, searchKeyNormalized);
                return [...accum, Object.assign({}, curr, { weight, indexMatches })];
            }
            else {
                return accum;
            }
        }, [])
            .sort((a, b) => {
            return a.weight - b.weight;
        })
            .map(sandboxMenuItem => Object.assign({}, sandboxMenuItem, { tabIndex: tabIndex++ }));
    }
    selectScenario(sandboxKey, scenarioKey) {
        // set flag to check when component is loaded
        window.isPlaygroundComponentLoaded = () => false;
        window.isPlaygroundComponentLoadedWithErrors = () => false;
        this.selectedSandboxAndScenarioKeys = { sandboxKey, scenarioKey };
        this.urlService.setSelected(sandboxKey, scenarioKey);
    }
    getShortcuts() {
        return [
            {
                keys: ['ctrl + p', 'f2'],
                description: 'Toggle command bar open/closed',
            },
            {
                keys: ['esc'],
                description: 'Close command bar',
            },
            {
                keys: ['\u2191', '\u2193'],
                description: 'Navigate up or down in command bar list',
            },
            {
                keys: ['ctrl + \u2191', 'ctrl + \u2193'],
                description: 'Switch scenarios while navigating up or down in command bar list',
            },
        ];
    }
};
AppComponent.ctorParameters = () => [
    { type: StateService },
    { type: UrlService },
    { type: EventManager },
    { type: LevenshteinDistance },
    { type: ChangeDetectorRef },
    { type: Observable, decorators: [{ type: Inject, args: [MIDDLEWARE,] }] }
];
__decorate([
    ViewChildren('scenarioElement')
], AppComponent.prototype, "scenarioLinkElements", void 0);
AppComponent = __decorate([
    Component({
        selector: 'playground-root',
        template: "<div class=\"shield\" *ngIf=\"commandBarActive\" (click)=\"toggleCommandBar()\"></div>\n<div class=\"command-bar\" *ngIf=\"filteredSandboxMenuItems\"\n     (keydown.control)=\"onCommandBarStartPreview($event)\"\n     (keyup.control)=\"onCommandBarStopPreview()\"\n     [class.command-bar--open]=\"commandBarActive\"\n     [class.command-bar--preview]=\"commandBarPreview\">\n    <input\n        class=\"command-bar__filter\"\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"search...\"\n        [formControl]=\"filter\"\n        #filterElement\n        [apFocus]=\"commandBarActive\"\n        (keyup.Esc)=\"commandBarActive = false\"\n        (keydown.arrowup)=\"onFilterBoxArrowUp($event)\"\n        (keydown.arrowdown)=\"onFilterBoxArrowDown($event)\"\n        (keydown.control.arrowup)=\"onFilterBoxArrowUp($event, true)\"\n        (keydown.control.arrowdown)=\"onFilterBoxArrowDown($event, true)\">\n    <div *ngIf=\"filteredSandboxMenuItems && filteredSandboxMenuItems.length > 0\" class=\"command-bar__sandboxes\">\n        <div class=\"command-bar__sandbox\"\n             *ngFor=\"let sandboxMenuItem of filteredSandboxMenuItems; index as menuItemIndex\">\n            <h2 class=\"command-bar__title\" title=\"{{sandboxMenuItem.label}} {{sandboxMenuItem.name}}\"\n                [class.command-bar__sandbox-title--selected]=\"selectedSandboxAndScenarioKeys.sandboxKey === sandboxMenuItem.key\">\n                <span class=\"command-bar__name\"\n                      [innerHtml]=\"sandboxMenuItem.name | apHighlightSearchMatch : sandboxMenuItem.indexMatches\"></span>\n                <span class=\"command-bar__label\" *ngIf=\"sandboxMenuItem.label\"\n                      [innerHtml]=\"sandboxMenuItem.label | apHighlightSearchMatch : sandboxMenuItem.indexMatches : sandboxMenuItem.name.length\"></span>\n            </h2>\n            <div class=\"command-bar__scenarios\"\n                 *ngFor=\"let scenarioMenuItem of sandboxMenuItem.scenarioMenuItems; index as scenarioMenuItemIndex\">\n                <a\n                    class=\"command-bar__scenario-link\"\n                    #scenarioElement\n                    [tabindex]=\"scenarioMenuItem.tabIndex\"\n                    [attr.sandboxMenuItemKey]=\"sandboxMenuItem.key\"\n                    [attr.scenarioMenuItemkey]=\"scenarioMenuItem.key\"\n                    (keydown.control.arrowup)=\"onScenarioLinkControlUp(scenarioElement, $event)\"\n                    (keydown.control.arrowdown)=\"onScenarioLinkControlDown(scenarioElement, $event)\"\n                    (keydown.arrowup)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.arrowdown)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.esc)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.enter)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keyup.esc)=\"onScenarioLinkKeyUp(scenarioElement, $event)\"\n                    (keyup.enter)=\"onScenarioLinkKeyUp(scenarioElement, $event)\"\n                    (click)=\"onScenarioClick(sandboxMenuItem.key, scenarioMenuItem.key, $event); toggleCommandBar()\"\n                    [class.command-bar__scenario-link--selected]=\"isSelected(sandboxMenuItem, scenarioMenuItem)\">\n                    <ap-pin [selected]=\"isSelected(sandboxMenuItem, scenarioMenuItem)\"></ap-pin>\n                    <span class=\"command-bar__scenario-label\">\n                  {{scenarioMenuItem.description}}\n                </span>\n                </a>\n            </div>\n        </div>\n    </div>\n    <a *ngIf=\"filteredSandboxMenuItems && filteredSandboxMenuItems.length > 0\" class=\"command-bar__brand\"\n       href=\"http://www.angularplayground.it/\" target=\"_blank\">\n        <ap-logo></ap-logo>\n    </a>\n</div>\n<section class=\"content\">\n    <ap-drawer *ngIf=\"!embed && activeMiddleware.overlay\" (openCommandBarClick)=\"toggleCommandBar()\" [class.content__menu--hide]=\"commandBarActive\" class=\"content__menu\"></ap-drawer>\n    <div class=\"content__none\" *ngIf=\"!selectedSandboxAndScenarioKeys.sandboxKey\">\n        <div class=\"content__none-message\">\n            <p *ngIf=\"totalSandboxes > 0\">\n                The playground has {{totalSandboxes}} sandboxed component{{totalSandboxes > 1 ? 's' : ''}}\n            </p>\n            <p *ngIf=\"totalSandboxes === 0\">\n                Get started - create your first sandbox! <a href=\"http://www.angularplayground.it/docs/how-to/sandboxing-components\" target=\"_blank\">Click here</a>.\n            </p>\n            <div class=\"content__shortcuts\">\n                <div class=\"content__shortcut\" *ngFor=\"let shortcut of shortcuts\">\n                    <div class=\"content__shortcut-label\">\n                        <ng-container *ngFor=\"let key of shortcut.keys; let i = index\">\n                            <code>\n                                {{key}}\n                            </code>\n                            <ng-container *ngIf=\"shortcut.keys.length > 1 && i < shortcut.keys.length - 1\">&nbsp;&nbsp;/&nbsp;&nbsp;</ng-container>\n                        </ng-container>\n                    </div>\n                    <div class=\"content__shortcut-value\">\n                        {{shortcut.description}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selectedSandboxAndScenarioKeys.sandboxKey\">\n        <ap-scenario [selectedSandboxAndScenarioKeys]=\"selectedSandboxAndScenarioKeys\"></ap-scenario>\n    </ng-container>\n</section>\n",
        styles: ["*{box-sizing:border-box}:host{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.shield{height:100vh;opacity:0;position:absolute;z-index:2;width:100%}.command-bar{background-color:#252526;box-shadow:0 3px 8px 5px #000;color:#fff;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;font-family:Consolas,monospace;left:50%;margin-top:-6px;max-height:100vh;padding-top:10px;position:absolute;-webkit-transform:translate(-50%,-120%);transform:translate(-50%,-120%);-webkit-transition:opacity .1s,-webkit-transform .1s;transition:transform .1s,opacity .1s,-webkit-transform .1s;width:376px;z-index:9999999999999}.command-bar::before{border-bottom:1px solid #000;content:\"\";display:block;position:absolute;top:61px;width:100%}.command-bar--open{min-height:60px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}.command-bar--preview{opacity:.7}.command-bar__filter{background-color:#3c3c3c;border:1px solid #174a6c;color:#fff;font-family:Consolas,monospace;font-size:16px;margin:6px 0 0 5px;padding:8px;width:365px;z-index:1}.command-bar__filter::-webkit-input-placeholder{color:#a9a9a9}.command-bar__filter::-moz-placeholder{color:#a9a9a9}.command-bar__filter::-ms-input-placeholder{color:#a9a9a9}.command-bar__filter::placeholder{color:#a9a9a9}.command-bar__filter:-ms-input-placeholder{color:#a9a9a9}.command-bar__filter::-moz-focus-inner{border:0;padding:0}.command-bar__sandboxes{border-top:1px solid rgba(255,255,255,.1);margin-top:9px;overflow:auto;position:relative;max-height:calc(100vh - 109px)}.command-bar__sandboxes::-webkit-scrollbar{background-color:transparent;width:6px}.command-bar__sandboxes::-webkit-scrollbar-track{border-left:1px solid #000;background:rgba(255,255,255,.1)}.command-bar__sandboxes::-webkit-scrollbar-thumb{background-color:rgba(255,255,255,.1);margin-left:2px;width:4px}.command-bar__sandbox{border-bottom:1px solid #000;border-top:1px solid rgba(255,255,255,.1);padding:8px 6px 14px}.command-bar__sandbox:first-child{border-top:none}.command-bar__sandbox:last-child{border-bottom:none;padding-bottom:12px}.command-bar__title{-webkit-box-align:center;align-items:center;color:rgba(255,255,255,.5);display:-webkit-box;display:flex;font-family:Consolas,monospace;font-size:12px;font-weight:400;-webkit-box-pack:justify;justify-content:space-between;margin:0 0 5px;padding:5px 0 0}.command-bar__title ::ng-deep mark{background:0 0;color:#0097fb;font-weight:700}.command-bar__name{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.command-bar__label{background:rgba(255,255,255,.1);border-radius:2px;display:block;font-size:10px;margin-left:10px;padding:4px 5px 3px}.command-bar__scenarios{display:-webkit-box;display:flex}.command-bar__scenario-link{-webkit-box-align:center;align-items:center;border-radius:2px;color:rgba(255,255,255,.5);cursor:pointer;display:-webkit-box;display:flex;padding:4px 3px;width:100%}.command-bar__scenario-link:active,.command-bar__scenario-link:focus,.command-bar__scenario-link:hover{background-color:#0097fb;color:#fff;outline-style:none}.command-bar__scenario-link:active .command-bar__scenario-icon,.command-bar__scenario-link:focus .command-bar__scenario-icon,.command-bar__scenario-link:hover .command-bar__scenario-icon{opacity:.5}.command-bar__scenario-label{line-height:1;max-width:calc(100% - 26px);min-width:calc(100% - 26px);padding-bottom:2px}.command-bar__scenario-link--selected{background:rgba(255,255,255,.1);color:#fff}.command-bar__scenario-link:active .command-bar__scenario-icon--selected,.command-bar__scenario-link:focus .command-bar__scenario-icon--selected,.command-bar__scenario-link:hover .command-bar__scenario-icon--selected{fill:#fff}.command-bar__brand{border-top:1px solid #000;display:block;position:relative;padding:9px 0 3px;text-align:center}.command-bar__brand::before{border-bottom:1px solid rgba(255,255,255,.1);content:\"\";display:block;left:0;position:absolute;top:0;width:100%}.command-bar__brand:hover .command-bar__logo__box{fill:rgba(255,255,255,.2)}.command-bar__brand:hover .command-bar__logo__letter{fill:rgba(255,255,255,.75)}.content__none{-webkit-box-align:center;align-items:center;border:0;display:-webkit-box;display:flex;min-height:calc(100vh - 4em);-webkit-box-pack:center;justify-content:center;padding-top:2em;padding-bottom:2em;position:relative;width:100%}.content__none-message{font-family:Arial,sans-serif;max-width:50%;min-width:450px;text-align:center}.content__none-message em{color:#666}.content__none-message p{font-size:20px}.content__shortcuts{border-top:1px solid #ccc;margin-top:2em;padding:30px 0 0 100px;width:520px}.content__shortcut{display:-webkit-box;display:flex}.content__shortcut-label{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;font-size:11px;-webkit-box-pack:end;justify-content:flex-end;max-width:150px;min-width:150px;padding:8px 12px 8px 0;white-space:nowrap}.content__shortcut-label code{background:#eee;border:1px solid #ccc;border-radius:4px;padding:3px 7px}.content__shortcut-value{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;font-size:11px;line-height:1.75;text-align:left;white-space:nowrap}"]
    }),
    __param(5, Inject(MIDDLEWARE))
], AppComponent);
export { AppComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGxheWdyb3VuZC8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL2FwcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDSCxpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sTUFBTSxFQUNOLFNBQVMsRUFDVCxZQUFZLEdBQ2YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM3RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDeEQsT0FBTyxFQUFjLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDbEMsT0FBTyxFQUFFLFlBQVksRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT3BFLElBQWEsWUFBWSxHQUF6QixNQUFhLFlBQVk7SUFZckIsWUFDWSxZQUEwQixFQUMxQixVQUFzQixFQUN0QixZQUEwQixFQUMxQixtQkFBd0MsRUFDeEMsaUJBQW9DLEVBQ2hCLFVBQWtDO1FBTHRELGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsd0JBQW1CLEdBQW5CLG1C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LEVBQUUsUUFBUSxDQUFDO2dCQUMxQixXQUFXLEVBQUUseUNBQXlDO2FBQ3pEO1lBQ0Q7Z0JBQ0ksSUFBSSxFQUFFLENBQUMsZUFBZSxFQUFFLGVBQWUsQ0FBQztnQkFDeEMsV0FBVyxFQUFFLGtFQUFrRTthQUNsRjtTQUNKLENBQUM7SUFDTixDQUFDO0NBQ0osQ0FBQTs7WUFwUzZCLFlBQVk7WUFDZCxVQUFVO1lBQ1IsWUFBWTtZQUNMLG1CQUFtQjtZQUNyQixpQkFBaUI7WUFDSixVQUFVLHVCQUFqRCxNQUFNLFNBQUMsVUFBVTs7QUFqQlc7SUFBaEMsWUFBWSxDQUFDLGlCQUFpQixDQUFDOzBEQUE2QztBQURwRSxZQUFZO0lBTHhCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsdW1MQUFtQzs7S0FFdEMsQ0FBQztJQW1CTyxXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtHQWxCZCxZQUFZLENBaVR4QjtTQWpUWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBJbmplY3QsXG4gICAgT25Jbml0LFxuICAgIFF1ZXJ5TGlzdCxcbiAgICBWaWV3Q2hpbGRyZW4sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBFdmVudE1hbmFnZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IFNhbmRib3hNZW51SXRlbSwgU2VsZWN0ZWRTYW5kYm94QW5kU2NlbmFyaW9LZXlzIH0gZnJvbSAnLi4vbGliL2FwcC1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVNlcnZpY2UgfSBmcm9tICcuL3NoYXJlZC9zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IFVybFNlcnZpY2UgfSBmcm9tICcuL3NoYXJlZC91cmwuc2VydmljZSc7XG5pbXBvcnQgeyBmdXp6eVNlYXJjaCB9IGZyb20gJy4vc2hhcmVkL2Z1enp5LXNlYXJjaC5mdW5jdGlvbic7XG5pbXBvcnQgeyBMZXZlbnNodGVpbkRpc3RhbmNlIH0gZnJvbSAnLi9zaGFyZWQvbGV2ZW5zaHRlaW4tZGlzdGFuY2UnO1xuaW1wb3J0IHsgU2FuZGJveExvYWRlciB9IGZyb20gJy4vc2hhcmVkL3NhbmRib3gtbG9hZGVyJztcbmltcG9ydCB7IE1pZGRsZXdhcmUsIE1JRERMRVdBUkUgfSBmcm9tICcuLi9saWIvbWlkZGxld2FyZXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGVib3VuY2VUaW1lLCBkaXN0aW5jdFVudGlsQ2hhbmdlZCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdwbGF5Z3JvdW5kLXJvb3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9hcHAuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2FwcC5jb21wb25lbnQuY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQFZpZXdDaGlsZHJlbignc2NlbmFyaW9FbGVtZW50Jykgc2NlbmFyaW9MaW5rRWxlbWVudHM6IFF1ZXJ5TGlzdDxFbGVtZW50UmVmPjtcbiAgICBjb21tYW5kQmFyQWN0aXZlID0gZmFsc2U7XG4gICAgY29tbWFuZEJhclByZXZpZXcgPSBmYWxzZTtcbiAgICB0b3RhbFNhbmRib3hlczogbnVtYmVyO1xuICAgIGZpbHRlcmVkU2FuZGJveE1lbnVJdGVtczogU2FuZGJveE1lbnVJdGVtW107XG4gICAgc2VsZWN0ZWRTYW5kYm94QW5kU2NlbmFyaW9LZXlzOiBTZWxlY3RlZFNhbmRib3hBbmRTY2VuYXJpb0tleXMgPSB7c2FuZGJveEtleTogbnVsbCwgc2NlbmFyaW9LZXk6IG51bGx9O1xuICAgIGZpbHRlciA9IG5ldyBGb3JtQ29udHJvbCgpO1xuICAgIHNob3J0Y3V0cyA9IHRoaXMuZ2V0U2hvcnRjdXRzKCk7XG4gICAgYWN0aXZlTWlkZGxld2FyZTogTWlkZGxld2FyZTtcbiAgICBlbWJlZCA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgc3RhdGVTZXJ2aWNlOiBTdGF0ZVNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgdXJsU2VydmljZTogVXJsU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBldmVudE1hbmFnZXI6IEV2ZW50TWFuYWdlcixcbiAgICAgICAgcHJpdmF0ZSBsZXZlbnNodGVpbkRpc3RhbmNlOiBMZXZlbnNodGVpbkRpc3RhbmNlLFxuICAgICAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgQEluamVjdChNSURETEVXQVJFKSBwcml2YXRlIG1pZGRsZXdhcmU6IE9ic2VydmFibGU8TWlkZGxld2FyZT4sXG4gICAgKSB7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGNvbnN0IHNhbmRib3hNZW51SXRlbXMgPSBTYW5kYm94TG9hZGVyLmdldFNhbmRib3hNZW51SXRlbXMoKTtcblxuICAgICAgICB0aGlzLm1pZGRsZXdhcmVcbiAgICAgICAgICAgIC5zdWJzY3JpYmUobWlkZGxld2FyZSA9PiB0aGlzLmFjdGl2ZU1pZGRsZXdhcmUgPSBtaWRkbGV3YXJlKTtcblxuICAgICAgICB0aGlzLmVtYmVkID0gdGhpcy51cmxTZXJ2aWNlLmVtYmVkO1xuICAgICAgICBpZiAodGhpcy5lbWJlZCkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFNhbmRib3hBbmRTY2VuYXJpb0tleXMgPSB7XG4gICAgICAgICAgICAgICAgc2FuZGJveEtleTogdGhpcy51cmxTZXJ2aWNlLnNlbGVjdC5zYW5kYm94S2V5LFxuICAgICAgICAgICAgICAgIHNjZW5hcmlvS2V5OiB0aGlzLnVybFNlcnZpY2Uuc2VsZWN0LnNjZW5hcmlvS2V5LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnVybFNlcnZpY2Uuc2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFNhbmRib3hBbmRTY2VuYXJpb0tleXMgPSB7XG4gICAgICAgICAgICAgICAgICAgIHNhbmRib3hLZXk6IHRoaXMudXJsU2VydmljZS5zZWxlY3Quc2FuZGJveEtleSxcbiAgICAgICAgICAgICAgICAgICAgc2NlbmFyaW9LZXk6IHRoaXMudXJsU2VydmljZS5zZWxlY3Quc2NlbmFyaW9LZXksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcignd2luZG93JywgJ2tleWRvd24uY29udHJvbC5wJywgdGhpcy5ibG9ja0V2ZW50KTtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyLmFkZEdsb2JhbEV2ZW50TGlzdGVuZXIoJ3dpbmRvdycsICdrZXlkb3duLkYyJywgdGhpcy5ibG9ja0V2ZW50KTtcblxuICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcignd2luZG93JywgJ2tleXVwLmNvbnRyb2wucCcsIChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYmxvY2tFdmVudChldmVudCk7XG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVDb21tYW5kQmFyKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcignd2luZG93JywgJ2tleXVwLkYyJywgKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5ibG9ja0V2ZW50KGV2ZW50KTtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUNvbW1hbmRCYXIoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBsZXQgZmlsdGVyVmFsdWUgPSB0aGlzLnN0YXRlU2VydmljZS5nZXRGaWx0ZXIoKTtcbiAgICAgICAgICAgIHRoaXMudG90YWxTYW5kYm94ZXMgPSBzYW5kYm94TWVudUl0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgIHRoaXMuZmlsdGVyZWRTYW5kYm94TWVudUl0ZW1zID0gdGhpcy5maWx0ZXJTYW5kYm94ZXMoc2FuZGJveE1lbnVJdGVtcywgZmlsdGVyVmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXIuc2V0VmFsdWUoZmlsdGVyVmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXIudmFsdWVDaGFuZ2VzLnBpcGVcbiAgICAgICAgICAgIChcbiAgICAgICAgICAgICAgICBkZWJvdW5jZVRpbWUoMzAwKSxcbiAgICAgICAgICAgICAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCgpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIC5zdWJzY3JpYmUodmFsdWUgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlU2VydmljZS5zZXRGaWx0ZXIodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2FuZGJveE1lbnVJdGVtcyA9IHRoaXMuZmlsdGVyU2FuZGJveGVzKHNhbmRib3hNZW51SXRlbXMsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RTY2VuYXJpbyhudWxsLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXhwb3NlIHNlbGVjdCBzY2VuYXJpbyBmdW5jdGlvbmFsaXR5IGZvciB2aXN1YWwgcmVncmVzc2lvbiB0ZXN0XG4gICAgICAgICh3aW5kb3cgYXMgYW55KS5sb2FkU2NlbmFyaW8gPSAoc2FuZGJveEtleTogc3RyaW5nLCBzY2VuYXJpb0tleTogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdFNjZW5hcmlvKHNhbmRib3hLZXksIHNjZW5hcmlvS2V5KTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIHNldCBmbGFnIHRvIGNoZWNrIHdoZW4gY29tcG9uZW50IGlzIGxvYWRlZFxuICAgICAgICAod2luZG93IGFzIGFueSkuaXNQbGF5Z3JvdW5kQ29tcG9uZW50TG9hZGVkID0gKCkgPT4gZmFsc2U7XG4gICAgICAgICh3aW5kb3cgYXMgYW55KS5pc1BsYXlncm91bmRDb21wb25lbnRMb2FkZWRXaXRoRXJyb3JzID0gKCkgPT4gZmFsc2U7XG4gICAgfVxuXG4gICAgb25GaWx0ZXJCb3hBcnJvd0Rvd24oZXZlbnQ6IGFueSwgc3dpdGNoVG9TY2VuYXJpbyA9IGZhbHNlKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBlbGVtZW50UmVmO1xuICAgICAgICBjb25zdCBjdXJyZW50SW5kZXggPSB0aGlzLmZpbmRDdXJyZW50U2NlbmFyaW9JbmRleCgpO1xuXG4gICAgICAgIGlmIChjdXJyZW50SW5kZXgpIHtcbiAgICAgICAgICAgIGVsZW1lbnRSZWYgPSB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudChjdXJyZW50SW5kZXggKyAxKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnRSZWYgPSB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudCgwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3dpdGNoVG9TY2VuYXJpbykge1xuICAgICAgICAgICAgdGhpcy5zaG93U2NlbmFyaW8oZWxlbWVudFJlZik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbkZpbHRlckJveEFycm93VXAoZXZlbnQ6IGFueSwgc3dpdGNoVG9TY2VuYXJpbyA9IGZhbHNlKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBlbGVtZW50UmVmO1xuICAgICAgICBjb25zdCBjdXJyZW50SW5kZXggPSB0aGlzLmZpbmRDdXJyZW50U2NlbmFyaW9JbmRleCgpO1xuXG4gICAgICAgIGlmIChjdXJyZW50SW5kZXgpIHtcbiAgICAgICAgICAgIGVsZW1lbnRSZWYgPSB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudChjdXJyZW50SW5kZXggLSAxKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNjZW5hcmlvTGlua0VsZW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGVsZW1lbnRSZWYgPSB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudCh0aGlzLnNjZW5hcmlvTGlua0VsZW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzd2l0Y2hUb1NjZW5hcmlvKSB7XG4gICAgICAgICAgICB0aGlzLnNob3dTY2VuYXJpbyhlbGVtZW50UmVmKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU2NlbmFyaW9MaW5rS2V5RG93bihzY2VuYXJpb0VsZW1lbnQ6IGFueSwgZmlsdGVyRWxlbWVudDogYW55LCBldmVudDogYW55KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgICAgICBjYXNlICdVcCc6XG4gICAgICAgICAgICBjYXNlICdBcnJvd1VwJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdvVXAoc2NlbmFyaW9FbGVtZW50KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ0Rvd24nOlxuICAgICAgICAgICAgY2FzZSAnQXJyb3dEb3duJzpcbiAgICAgICAgICAgICAgICB0aGlzLmdvRG93bihzY2VuYXJpb0VsZW1lbnQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQua2V5ICE9PSAnRXNjYXBlJyAmJiBldmVudC5rZXkgIT09ICdFbnRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LmtleS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyLnNldFZhbHVlKGAke3RoaXMuZmlsdGVyLnZhbHVlfSR7ZXZlbnQua2V5fWApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlckVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblNjZW5hcmlvTGlua0tleVVwKHNjZW5hcmlvRWxlbWVudDogYW55LCBldmVudDogYW55KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgICAgICBjYXNlICdFc2NhcGUnOlxuICAgICAgICAgICAgICAgIHRoaXMuY29tbWFuZEJhckFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnRW50ZXInOlxuICAgICAgICAgICAgICAgIHNjZW5hcmlvRWxlbWVudC5jbGljaygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25TY2VuYXJpb0xpbmtDb250cm9sRG93bihzY2VuYXJpb0VsZW1lbnQ6IGFueSwgZXZlbnQ6IGFueSkge1xuICAgICAgICBpZiAoIXRoaXMuY29tbWFuZEJhckFjdGl2ZSkgcmV0dXJuO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgZWxlbWVudFJlZiA9IHRoaXMuZ29Eb3duKHNjZW5hcmlvRWxlbWVudCk7XG4gICAgICAgIHRoaXMuc2hvd1NjZW5hcmlvKGVsZW1lbnRSZWYpO1xuICAgIH1cblxuICAgIG9uU2NlbmFyaW9MaW5rQ29udHJvbFVwKHNjZW5hcmlvRWxlbWVudDogYW55LCBldmVudDogYW55KSB7XG4gICAgICAgIGlmICghdGhpcy5jb21tYW5kQmFyQWN0aXZlKSByZXR1cm47XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBlbGVtZW50UmVmID0gdGhpcy5nb1VwKHNjZW5hcmlvRWxlbWVudCk7XG4gICAgICAgIHRoaXMuc2hvd1NjZW5hcmlvKGVsZW1lbnRSZWYpO1xuICAgIH1cblxuICAgIG9uQ29tbWFuZEJhclN0YXJ0UHJldmlldyhldmVudDogYW55KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuY29tbWFuZEJhclByZXZpZXcgPSB0cnVlO1xuICAgIH1cblxuICAgIG9uQ29tbWFuZEJhclN0b3BQcmV2aWV3KCkge1xuICAgICAgICB0aGlzLmNvbW1hbmRCYXJQcmV2aWV3ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgb25TY2VuYXJpb0NsaWNrKHNhbmRib3hLZXk6IHN0cmluZywgc2NlbmFyaW9LZXk6IG51bWJlciwgZXZlbnQ6IGFueSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnNlbGVjdFNjZW5hcmlvKHNhbmRib3hLZXksIHNjZW5hcmlvS2V5KTtcbiAgICB9XG5cbiAgICBpc1NlbGVjdGVkKHNhbmRib3g6IGFueSwgc2NlbmFyaW86IGFueSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFNhbmRib3hBbmRTY2VuYXJpb0tleXMuc2NlbmFyaW9LZXkgPT09IHNjZW5hcmlvLmtleVxuICAgICAgICAgICAgJiYgdGhpcy5zZWxlY3RlZFNhbmRib3hBbmRTY2VuYXJpb0tleXMuc2FuZGJveEtleS50b0xvd2VyQ2FzZSgpID09PSBzYW5kYm94LmtleS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIHRvZ2dsZUNvbW1hbmRCYXIoKSB7XG4gICAgICAgIHRoaXMuY29tbWFuZEJhckFjdGl2ZSA9ICF0aGlzLmNvbW1hbmRCYXJBY3RpdmU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBibG9ja0V2ZW50KGU6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2hvd1NjZW5hcmlvKHNlbGVjdGVkU2NlbmFyaW9FbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIGlmIChzZWxlY3RlZFNjZW5hcmlvRWxlbWVudFJlZikge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RTY2VuYXJpbyhcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFNjZW5hcmlvRWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmdldEF0dHJpYnV0ZSgnc2FuZGJveE1lbnVJdGVtS2V5JyksXG4gICAgICAgICAgICAgICAgcGFyc2VJbnQoc2VsZWN0ZWRTY2VuYXJpb0VsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3NjZW5hcmlvTWVudUl0ZW1rZXknKSwgMTApKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZmluZEN1cnJlbnRTY2VuYXJpb0luZGV4KCk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gICAgICAgIGxldCBjdXJyZW50SW5kZXg7XG5cbiAgICAgICAgaWYgKHRoaXMuc2NlbmFyaW9MaW5rRWxlbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5zY2VuYXJpb0xpbmtFbGVtZW50cy5tYXAoKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGk6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2xhc3NOYW1lLmluY2x1ZGVzKCdzZWxlY3RlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY3VycmVudEluZGV4O1xuICAgIH1cblxuICAgIHByaXZhdGUgZ29VcChzY2VuYXJpb0VsZW1lbnQ6IGFueSkge1xuICAgICAgICBsZXQgY3VycmVudEluZGV4ID0gLTE7XG5cbiAgICAgICAgdGhpcy5zY2VuYXJpb0xpbmtFbGVtZW50cy5mb3JFYWNoKChzY2VuYXJpb0VsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgIGlmIChzY2VuYXJpb0VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCA9PT0gc2NlbmFyaW9FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChjdXJyZW50SW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudCh0aGlzLnNjZW5hcmlvTGlua0VsZW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNTY2VuYXJpb0xpbmtFbGVtZW50KGN1cnJlbnRJbmRleCAtIDEpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnb0Rvd24oc2NlbmFyaW9FbGVtZW50OiBhbnkpIHtcbiAgICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IC0xO1xuXG4gICAgICAgIHRoaXMuc2NlbmFyaW9MaW5rRWxlbWVudHMuZm9yRWFjaCgoc2NlbmFyaW9FbGVtZW50UmVmOiBFbGVtZW50UmVmLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICBpZiAoc2NlbmFyaW9FbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQgPT09IHNjZW5hcmlvRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoY3VycmVudEluZGV4ID09PSB0aGlzLnNjZW5hcmlvTGlua0VsZW1lbnRzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudCgwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvY3VzU2NlbmFyaW9MaW5rRWxlbWVudChjdXJyZW50SW5kZXggKyAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZm9jdXNTY2VuYXJpb0xpbmtFbGVtZW50KGluZGV4OiBudW1iZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuc2NlbmFyaW9MaW5rRWxlbWVudHMudG9BcnJheSgpW2luZGV4XSkge1xuICAgICAgICAgICAgbGV0IGVsZW1lbnRSZWYgPSB0aGlzLnNjZW5hcmlvTGlua0VsZW1lbnRzLnRvQXJyYXkoKVtpbmRleF07XG4gICAgICAgICAgICBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50UmVmO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBmaWx0ZXJTYW5kYm94ZXMoc2FuZGJveE1lbnVJdGVtczogU2FuZGJveE1lbnVJdGVtW10sIGZpbHRlcjogc3RyaW5nKSB7XG4gICAgICAgIGlmICghZmlsdGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gc2FuZGJveE1lbnVJdGVtcy5tYXAoKGl0ZW0sIGkpID0+IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0sIHt0YWJJbmRleDogaX0pKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB0YWJJbmRleCA9IDA7XG4gICAgICAgIGxldCBmaWx0ZXJOb3JtYWxpemVkID0gZmlsdGVyLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgcmV0dXJuIHNhbmRib3hNZW51SXRlbXNcbiAgICAgICAgICAgIC5yZWR1Y2UoKGFjY3VtLCBjdXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNlYXJjaEtleU5vcm1hbGl6ZWQgPSBjdXJyLnNlYXJjaEtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGxldCBpbmRleE1hdGNoZXMgPSBmdXp6eVNlYXJjaChmaWx0ZXJOb3JtYWxpemVkLCBzZWFyY2hLZXlOb3JtYWxpemVkKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXhNYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB3ZWlnaHQgPSB0aGlzLmxldmVuc2h0ZWluRGlzdGFuY2UuZ2V0RGlzdGFuY2UoZmlsdGVyTm9ybWFsaXplZCwgc2VhcmNoS2V5Tm9ybWFsaXplZCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbLi4uYWNjdW0sIE9iamVjdC5hc3NpZ24oe30sIGN1cnIsIHt3ZWlnaHQsIGluZGV4TWF0Y2hlc30pXTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWNjdW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgW10pXG4gICAgICAgICAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBhLndlaWdodCAtIGIud2VpZ2h0O1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5tYXAoc2FuZGJveE1lbnVJdGVtID0+IE9iamVjdC5hc3NpZ24oe30sIHNhbmRib3hNZW51SXRlbSwge3RhYkluZGV4OiB0YWJJbmRleCsrfSkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2VsZWN0U2NlbmFyaW8oc2FuZGJveEtleTogc3RyaW5nLCBzY2VuYXJpb0tleTogbnVtYmVyKSB7XG4gICAgICAgIC8vIHNldCBmbGFnIHRvIGNoZWNrIHdoZW4gY29tcG9uZW50IGlzIGxvYWRlZFxuICAgICAgICAod2luZG93IGFzIGFueSkuaXNQbGF5Z3JvdW5kQ29tcG9uZW50TG9hZGVkID0gKCkgPT4gZmFsc2U7XG4gICAgICAgICh3aW5kb3cgYXMgYW55KS5pc1BsYXlncm91bmRDb21wb25lbnRMb2FkZWRXaXRoRXJyb3JzID0gKCkgPT4gZmFsc2U7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRTYW5kYm94QW5kU2NlbmFyaW9LZXlzID0ge3NhbmRib3hLZXksIHNjZW5hcmlvS2V5fTtcbiAgICAgICAgdGhpcy51cmxTZXJ2aWNlLnNldFNlbGVjdGVkKHNhbmRib3hLZXksIHNjZW5hcmlvS2V5KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFNob3J0Y3V0cygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBrZXlzOiBbJ2N0cmwgKyBwJywgJ2YyJ10sXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUb2dnbGUgY29tbWFuZCBiYXIgb3Blbi9jbG9zZWQnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBrZXlzOiBbJ2VzYyddLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnQ2xvc2UgY29tbWFuZCBiYXInLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBrZXlzOiBbJ1xcdTIxOTEnLCAnXFx1MjE5MyddLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTmF2aWdhdGUgdXAgb3IgZG93biBpbiBjb21tYW5kIGJhciBsaXN0JyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAga2V5czogWydjdHJsICsgXFx1MjE5MScsICdjdHJsICsgXFx1MjE5MyddLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3dpdGNoIHNjZW5hcmlvcyB3aGlsZSBuYXZpZ2F0aW5nIHVwIG9yIGRvd24gaW4gY29tbWFuZCBiYXIgbGlzdCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbn1cbiJdfQ==