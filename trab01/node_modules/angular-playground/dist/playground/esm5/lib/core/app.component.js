import { __decorate, __param, __read, __spread } from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, QueryList, ViewChildren, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { EventManager } from '@angular/platform-browser';
import { StateService } from './shared/state.service';
import { UrlService } from './shared/url.service';
import { fuzzySearch } from './shared/fuzzy-search.function';
import { LevenshteinDistance } from './shared/levenshtein-distance';
import { SandboxLoader } from './shared/sandbox-loader';
import { MIDDLEWARE } from '../lib/middlewares';
import { Observable } from 'rxjs';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
var AppComponent = /** @class */ (function () {
    function AppComponent(stateService, urlService, eventManager, levenshteinDistance, changeDetectorRef, middleware) {
        this.stateService = stateService;
        this.urlService = urlService;
        this.eventManager = eventManager;
        this.levenshteinDistance = levenshteinDistance;
        this.changeDetectorRef = changeDetectorRef;
        this.middleware = middleware;
        this.commandBarActive = false;
        this.commandBarPreview = false;
        this.selectedSandboxAndScenarioKeys = { sandboxKey: null, scenarioKey: null };
        this.filter = new FormControl();
        this.shortcuts = this.getShortcuts();
        this.embed = false;
    }
    AppComponent.prototype.ngOnInit = function () {
        var _this = this;
        var sandboxMenuItems = SandboxLoader.getSandboxMenuItems();
        this.middleware
            .subscribe(function (middleware) { return _this.activeMiddleware = middleware; });
        this.embed = this.urlService.embed;
        if (this.embed) {
            this.selectedSandboxAndScenarioKeys = {
                sandboxKey: this.urlService.select.sandboxKey,
                scenarioKey: this.urlService.select.scenarioKey,
            };
        }
        else {
            if (this.urlService.select) {
                this.selectedSandboxAndScenarioKeys = {
                    sandboxKey: this.urlService.select.sandboxKey,
                    scenarioKey: this.urlService.select.scenarioKey,
                };
            }
            this.eventManager.addGlobalEventListener('window', 'keydown.control.p', this.blockEvent);
            this.eventManager.addGlobalEventListener('window', 'keydown.F2', this.blockEvent);
            this.eventManager.addGlobalEventListener('window', 'keyup.control.p', function (event) {
                _this.blockEvent(event);
                _this.toggleCommandBar();
            });
            this.eventManager.addGlobalEventListener('window', 'keyup.F2', function (event) {
                _this.blockEvent(event);
                _this.toggleCommandBar();
            });
            var filterValue = this.stateService.getFilter();
            this.totalSandboxes = sandboxMenuItems.length;
            this.filteredSandboxMenuItems = this.filterSandboxes(sandboxMenuItems, filterValue);
            this.filter.setValue(filterValue);
            this.filter.valueChanges.pipe(debounceTime(300), distinctUntilChanged())
                .subscribe(function (value) {
                _this.stateService.setFilter(value);
                _this.filteredSandboxMenuItems = _this.filterSandboxes(sandboxMenuItems, value);
                if (!value) {
                    _this.selectScenario(null, null);
                }
            });
        }
        // expose select scenario functionality for visual regression test
        window.loadScenario = function (sandboxKey, scenarioKey) {
            _this.selectScenario(sandboxKey, scenarioKey);
            _this.changeDetectorRef.detectChanges();
        };
        // set flag to check when component is loaded
        window.isPlaygroundComponentLoaded = function () { return false; };
        window.isPlaygroundComponentLoadedWithErrors = function () { return false; };
    };
    AppComponent.prototype.onFilterBoxArrowDown = function (event, switchToScenario) {
        if (switchToScenario === void 0) { switchToScenario = false; }
        event.preventDefault();
        var elementRef;
        var currentIndex = this.findCurrentScenarioIndex();
        if (currentIndex) {
            elementRef = this.focusScenarioLinkElement(currentIndex + 1);
        }
        else {
            elementRef = this.focusScenarioLinkElement(0);
        }
        if (switchToScenario) {
            this.showScenario(elementRef);
        }
    };
    AppComponent.prototype.onFilterBoxArrowUp = function (event, switchToScenario) {
        if (switchToScenario === void 0) { switchToScenario = false; }
        event.preventDefault();
        var elementRef;
        var currentIndex = this.findCurrentScenarioIndex();
        if (currentIndex) {
            elementRef = this.focusScenarioLinkElement(currentIndex - 1);
        }
        else if (this.scenarioLinkElements.length > 0) {
            elementRef = this.focusScenarioLinkElement(this.scenarioLinkElements.length - 1);
        }
        if (switchToScenario) {
            this.showScenario(elementRef);
        }
    };
    AppComponent.prototype.onScenarioLinkKeyDown = function (scenarioElement, filterElement, event) {
        event.preventDefault();
        switch (event.key) {
            case 'Up':
            case 'ArrowUp':
                this.goUp(scenarioElement);
                break;
            case 'Down':
            case 'ArrowDown':
                this.goDown(scenarioElement);
                break;
            default:
                if (event.key !== 'Escape' && event.key !== 'Enter') {
                    if (event.key.length === 1) {
                        this.filter.setValue("" + this.filter.value + event.key);
                    }
                    filterElement.focus();
                }
                break;
        }
    };
    AppComponent.prototype.onScenarioLinkKeyUp = function (scenarioElement, event) {
        event.preventDefault();
        switch (event.key) {
            case 'Escape':
                this.commandBarActive = false;
                break;
            case 'Enter':
                scenarioElement.click();
                break;
        }
    };
    AppComponent.prototype.onScenarioLinkControlDown = function (scenarioElement, event) {
        if (!this.commandBarActive)
            return;
        event.preventDefault();
        var elementRef = this.goDown(scenarioElement);
        this.showScenario(elementRef);
    };
    AppComponent.prototype.onScenarioLinkControlUp = function (scenarioElement, event) {
        if (!this.commandBarActive)
            return;
        event.preventDefault();
        var elementRef = this.goUp(scenarioElement);
        this.showScenario(elementRef);
    };
    AppComponent.prototype.onCommandBarStartPreview = function (event) {
        event.preventDefault();
        this.commandBarPreview = true;
    };
    AppComponent.prototype.onCommandBarStopPreview = function () {
        this.commandBarPreview = false;
    };
    AppComponent.prototype.onScenarioClick = function (sandboxKey, scenarioKey, event) {
        event.preventDefault();
        this.selectScenario(sandboxKey, scenarioKey);
    };
    AppComponent.prototype.isSelected = function (sandbox, scenario) {
        return this.selectedSandboxAndScenarioKeys.scenarioKey === scenario.key
            && this.selectedSandboxAndScenarioKeys.sandboxKey.toLowerCase() === sandbox.key.toLowerCase();
    };
    AppComponent.prototype.toggleCommandBar = function () {
        this.commandBarActive = !this.commandBarActive;
    };
    AppComponent.prototype.blockEvent = function (e) {
        e.preventDefault();
        e.stopPropagation();
    };
    AppComponent.prototype.showScenario = function (selectedScenarioElementRef) {
        if (selectedScenarioElementRef) {
            this.selectScenario(selectedScenarioElementRef.nativeElement.getAttribute('sandboxMenuItemKey'), parseInt(selectedScenarioElementRef.nativeElement.getAttribute('scenarioMenuItemkey'), 10));
        }
    };
    AppComponent.prototype.findCurrentScenarioIndex = function () {
        var currentIndex;
        if (this.scenarioLinkElements.length > 0) {
            this.scenarioLinkElements.map(function (element, i) {
                if (element.nativeElement.className.includes('selected')) {
                    currentIndex = i;
                }
            });
        }
        return currentIndex;
    };
    AppComponent.prototype.goUp = function (scenarioElement) {
        var currentIndex = -1;
        this.scenarioLinkElements.forEach(function (scenarioElementRef, index) {
            if (scenarioElementRef.nativeElement === scenarioElement) {
                currentIndex = index;
            }
        });
        if (currentIndex === 0) {
            return this.focusScenarioLinkElement(this.scenarioLinkElements.length - 1);
        }
        else {
            return this.focusScenarioLinkElement(currentIndex - 1);
        }
    };
    AppComponent.prototype.goDown = function (scenarioElement) {
        var currentIndex = -1;
        this.scenarioLinkElements.forEach(function (scenarioElementRef, index) {
            if (scenarioElementRef.nativeElement === scenarioElement) {
                currentIndex = index;
            }
        });
        if (currentIndex === this.scenarioLinkElements.length - 1) {
            return this.focusScenarioLinkElement(0);
        }
        else {
            return this.focusScenarioLinkElement(currentIndex + 1);
        }
    };
    AppComponent.prototype.focusScenarioLinkElement = function (index) {
        if (this.scenarioLinkElements.toArray()[index]) {
            var elementRef = this.scenarioLinkElements.toArray()[index];
            elementRef.nativeElement.focus();
            return elementRef;
        }
    };
    AppComponent.prototype.filterSandboxes = function (sandboxMenuItems, filter) {
        var _this = this;
        if (!filter) {
            return sandboxMenuItems.map(function (item, i) { return Object.assign({}, item, { tabIndex: i }); });
        }
        var tabIndex = 0;
        var filterNormalized = filter.toLowerCase();
        return sandboxMenuItems
            .reduce(function (accum, curr) {
            var searchKeyNormalized = curr.searchKey.toLowerCase();
            var indexMatches = fuzzySearch(filterNormalized, searchKeyNormalized);
            if (indexMatches) {
                var weight = _this.levenshteinDistance.getDistance(filterNormalized, searchKeyNormalized);
                return __spread(accum, [Object.assign({}, curr, { weight: weight, indexMatches: indexMatches })]);
            }
            else {
                return accum;
            }
        }, [])
            .sort(function (a, b) {
            return a.weight - b.weight;
        })
            .map(function (sandboxMenuItem) { return Object.assign({}, sandboxMenuItem, { tabIndex: tabIndex++ }); });
    };
    AppComponent.prototype.selectScenario = function (sandboxKey, scenarioKey) {
        // set flag to check when component is loaded
        window.isPlaygroundComponentLoaded = function () { return false; };
        window.isPlaygroundComponentLoadedWithErrors = function () { return false; };
        this.selectedSandboxAndScenarioKeys = { sandboxKey: sandboxKey, scenarioKey: scenarioKey };
        this.urlService.setSelected(sandboxKey, scenarioKey);
    };
    AppComponent.prototype.getShortcuts = function () {
        return [
            {
                keys: ['ctrl + p', 'f2'],
                description: 'Toggle command bar open/closed',
            },
            {
                keys: ['esc'],
                description: 'Close command bar',
            },
            {
                keys: ['\u2191', '\u2193'],
                description: 'Navigate up or down in command bar list',
            },
            {
                keys: ['ctrl + \u2191', 'ctrl + \u2193'],
                description: 'Switch scenarios while navigating up or down in command bar list',
            },
        ];
    };
    AppComponent.ctorParameters = function () { return [
        { type: StateService },
        { type: UrlService },
        { type: EventManager },
        { type: LevenshteinDistance },
        { type: ChangeDetectorRef },
        { type: Observable, decorators: [{ type: Inject, args: [MIDDLEWARE,] }] }
    ]; };
    __decorate([
        ViewChildren('scenarioElement')
    ], AppComponent.prototype, "scenarioLinkElements", void 0);
    AppComponent = __decorate([
        Component({
            selector: 'playground-root',
            template: "<div class=\"shield\" *ngIf=\"commandBarActive\" (click)=\"toggleCommandBar()\"></div>\n<div class=\"command-bar\" *ngIf=\"filteredSandboxMenuItems\"\n     (keydown.control)=\"onCommandBarStartPreview($event)\"\n     (keyup.control)=\"onCommandBarStopPreview()\"\n     [class.command-bar--open]=\"commandBarActive\"\n     [class.command-bar--preview]=\"commandBarPreview\">\n    <input\n        class=\"command-bar__filter\"\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"search...\"\n        [formControl]=\"filter\"\n        #filterElement\n        [apFocus]=\"commandBarActive\"\n        (keyup.Esc)=\"commandBarActive = false\"\n        (keydown.arrowup)=\"onFilterBoxArrowUp($event)\"\n        (keydown.arrowdown)=\"onFilterBoxArrowDown($event)\"\n        (keydown.control.arrowup)=\"onFilterBoxArrowUp($event, true)\"\n        (keydown.control.arrowdown)=\"onFilterBoxArrowDown($event, true)\">\n    <div *ngIf=\"filteredSandboxMenuItems && filteredSandboxMenuItems.length > 0\" class=\"command-bar__sandboxes\">\n        <div class=\"command-bar__sandbox\"\n             *ngFor=\"let sandboxMenuItem of filteredSandboxMenuItems; index as menuItemIndex\">\n            <h2 class=\"command-bar__title\" title=\"{{sandboxMenuItem.label}} {{sandboxMenuItem.name}}\"\n                [class.command-bar__sandbox-title--selected]=\"selectedSandboxAndScenarioKeys.sandboxKey === sandboxMenuItem.key\">\n                <span class=\"command-bar__name\"\n                      [innerHtml]=\"sandboxMenuItem.name | apHighlightSearchMatch : sandboxMenuItem.indexMatches\"></span>\n                <span class=\"command-bar__label\" *ngIf=\"sandboxMenuItem.label\"\n                      [innerHtml]=\"sandboxMenuItem.label | apHighlightSearchMatch : sandboxMenuItem.indexMatches : sandboxMenuItem.name.length\"></span>\n            </h2>\n            <div class=\"command-bar__scenarios\"\n                 *ngFor=\"let scenarioMenuItem of sandboxMenuItem.scenarioMenuItems; index as scenarioMenuItemIndex\">\n                <a\n                    class=\"command-bar__scenario-link\"\n                    #scenarioElement\n                    [tabindex]=\"scenarioMenuItem.tabIndex\"\n                    [attr.sandboxMenuItemKey]=\"sandboxMenuItem.key\"\n                    [attr.scenarioMenuItemkey]=\"scenarioMenuItem.key\"\n                    (keydown.control.arrowup)=\"onScenarioLinkControlUp(scenarioElement, $event)\"\n                    (keydown.control.arrowdown)=\"onScenarioLinkControlDown(scenarioElement, $event)\"\n                    (keydown.arrowup)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.arrowdown)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.esc)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keydown.enter)=\"onScenarioLinkKeyDown(scenarioElement, filterElement, $event)\"\n                    (keyup.esc)=\"onScenarioLinkKeyUp(scenarioElement, $event)\"\n                    (keyup.enter)=\"onScenarioLinkKeyUp(scenarioElement, $event)\"\n                    (click)=\"onScenarioClick(sandboxMenuItem.key, scenarioMenuItem.key, $event); toggleCommandBar()\"\n                    [class.command-bar__scenario-link--selected]=\"isSelected(sandboxMenuItem, scenarioMenuItem)\">\n                    <ap-pin [selected]=\"isSelected(sandboxMenuItem, scenarioMenuItem)\"></ap-pin>\n                    <span class=\"command-bar__scenario-label\">\n                  {{scenarioMenuItem.description}}\n                </span>\n                </a>\n            </div>\n        </div>\n    </div>\n    <a *ngIf=\"filteredSandboxMenuItems && filteredSandboxMenuItems.length > 0\" class=\"command-bar__brand\"\n       href=\"http://www.angularplayground.it/\" target=\"_blank\">\n        <ap-logo></ap-logo>\n    </a>\n</div>\n<section class=\"content\">\n    <ap-drawer *ngIf=\"!embed && activeMiddleware.overlay\" (openCommandBarClick)=\"toggleCommandBar()\" [class.content__menu--hide]=\"commandBarActive\" class=\"content__menu\"></ap-drawer>\n    <div class=\"content__none\" *ngIf=\"!selectedSandboxAndScenarioKeys.sandboxKey\">\n        <div class=\"content__none-message\">\n            <p *ngIf=\"totalSandboxes > 0\">\n                The playground has {{totalSandboxes}} sandboxed component{{totalSandboxes > 1 ? 's' : ''}}\n            </p>\n            <p *ngIf=\"totalSandboxes === 0\">\n                Get started - create your first sandbox! <a href=\"http://www.angularplayground.it/docs/how-to/sandboxing-components\" target=\"_blank\">Click here</a>.\n            </p>\n            <div class=\"content__shortcuts\">\n                <div class=\"content__shortcut\" *ngFor=\"let shortcut of shortcuts\">\n                    <div class=\"content__shortcut-label\">\n                        <ng-container *ngFor=\"let key of shortcut.keys; let i = index\">\n                            <code>\n                                {{key}}\n                            </code>\n                            <ng-container *ngIf=\"shortcut.keys.length > 1 && i < shortcut.keys.length - 1\">&nbsp;&nbsp;/&nbsp;&nbsp;</ng-container>\n                        </ng-container>\n                    </div>\n                    <div class=\"content__shortcut-value\">\n                        {{shortcut.description}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selectedSandboxAndScenarioKeys.sandboxKey\">\n        <ap-scenario [selectedSandboxAndScenarioKeys]=\"selectedSandboxAndScenarioKeys\"></ap-scenario>\n    </ng-container>\n</section>\n",
            styles: ["*{box-sizing:border-box}:host{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.shield{height:100vh;opacity:0;position:absolute;z-index:2;width:100%}.command-bar{background-color:#252526;box-shadow:0 3px 8px 5px #000;color:#fff;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;font-family:Consolas,monospace;left:50%;margin-top:-6px;max-height:100vh;padding-top:10px;position:absolute;-webkit-transform:translate(-50%,-120%);transform:translate(-50%,-120%);-webkit-transition:opacity .1s,-webkit-transform .1s;transition:transform .1s,opacity .1s,-webkit-transform .1s;width:376px;z-index:9999999999999}.command-bar::before{border-bottom:1px solid #000;content:\"\";display:block;position:absolute;top:61px;width:100%}.command-bar--open{min-height:60px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}.command-bar--preview{opacity:.7}.command-bar__filter{background-color:#3c3c3c;border:1px solid #174a6c;color:#fff;font-family:Consolas,monospace;font-size:16px;margin:6px 0 0 5px;padding:8px;width:365px;z-index:1}.command-bar__filter::-webkit-input-placeholder{color:#a9a9a9}.command-bar__filter::-moz-placeholder{color:#a9a9a9}.command-bar__filter::-ms-input-placeholder{color:#a9a9a9}.command-bar__filter::placeholder{color:#a9a9a9}.command-bar__filter:-ms-input-placeholder{color:#a9a9a9}.command-bar__filter::-moz-focus-inner{border:0;padding:0}.command-bar__sandboxes{border-top:1px solid rgba(255,255,255,.1);margin-top:9px;overflow:auto;position:relative;max-height:calc(100vh - 109px)}.command-bar__sandboxes::-webkit-scrollbar{background-color:transparent;width:6px}.command-bar__sandboxes::-webkit-scrollbar-track{border-left:1px solid #000;background:rgba(255,255,255,.1)}.command-bar__sandboxes::-webkit-scrollbar-thumb{background-color:rgba(255,255,255,.1);margin-left:2px;width:4px}.command-bar__sandbox{border-bottom:1px solid #000;border-top:1px solid rgba(255,255,255,.1);padding:8px 6px 14px}.command-bar__sandbox:first-child{border-top:none}.command-bar__sandbox:last-child{border-bottom:none;padding-bottom:12px}.command-bar__title{-webkit-box-align:center;align-items:center;color:rgba(255,255,255,.5);display:-webkit-box;display:flex;font-family:Consolas,monospace;font-size:12px;font-weight:400;-webkit-box-pack:justify;justify-content:space-between;margin:0 0 5px;padding:5px 0 0}.command-bar__title ::ng-deep mark{background:0 0;color:#0097fb;font-weight:700}.command-bar__name{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.command-bar__label{background:rgba(255,255,255,.1);border-radius:2px;display:block;font-size:10px;margin-left:10px;padding:4px 5px 3px}.command-bar__scenarios{display:-webkit-box;display:flex}.command-bar__scenario-link{-webkit-box-align:center;align-items:center;border-radius:2px;color:rgba(255,255,255,.5);cursor:pointer;display:-webkit-box;display:flex;padding:4px 3px;width:100%}.command-bar__scenario-link:active,.command-bar__scenario-link:focus,.command-bar__scenario-link:hover{background-color:#0097fb;color:#fff;outline-style:none}.command-bar__scenario-link:active .command-bar__scenario-icon,.command-bar__scenario-link:focus .command-bar__scenario-icon,.command-bar__scenario-link:hover .command-bar__scenario-icon{opacity:.5}.command-bar__scenario-label{line-height:1;max-width:calc(100% - 26px);min-width:calc(100% - 26px);padding-bottom:2px}.command-bar__scenario-link--selected{background:rgba(255,255,255,.1);color:#fff}.command-bar__scenario-link:active .command-bar__scenario-icon--selected,.command-bar__scenario-link:focus .command-bar__scenario-icon--selected,.command-bar__scenario-link:hover .command-bar__scenario-icon--selected{fill:#fff}.command-bar__brand{border-top:1px solid #000;display:block;position:relative;padding:9px 0 3px;text-align:center}.command-bar__brand::before{border-bottom:1px solid rgba(255,255,255,.1);content:\"\";display:block;left:0;position:absolute;top:0;width:100%}.command-bar__brand:hover .command-bar__logo__box{fill:rgba(255,255,255,.2)}.command-bar__brand:hover .command-bar__logo__letter{fill:rgba(255,255,255,.75)}.content__none{-webkit-box-align:center;align-items:center;border:0;display:-webkit-box;display:flex;min-height:calc(100vh - 4em);-webkit-box-pack:center;justify-content:center;padding-top:2em;padding-bottom:2em;position:relative;width:100%}.content__none-message{font-family:Arial,sans-serif;max-width:50%;min-width:450px;text-align:center}.content__none-message em{color:#666}.content__none-message p{font-size:20px}.content__shortcuts{border-top:1px solid #ccc;margin-top:2em;padding:30px 0 0 100px;width:520px}.content__shortcut{display:-webkit-box;display:flex}.content__shortcut-label{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;font-size:11px;-webkit-box-pack:end;justify-content:flex-end;max-width:150px;min-width:150px;padding:8px 12px 8px 0;white-space:nowrap}.content__shortcut-label code{background:#eee;border:1px solid #ccc;border-radius:4px;padding:3px 7px}.content__shortcut-value{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;font-size:11px;line-height:1.75;text-align:left;white-space:nowrap}"]
        }),
        __param(5, Inject(MIDDLEWARE))
    ], AppComponent);
    return AppComponent;
}());
export { AppComponent };
//# sourceMappingURL=data:application/json;base64,