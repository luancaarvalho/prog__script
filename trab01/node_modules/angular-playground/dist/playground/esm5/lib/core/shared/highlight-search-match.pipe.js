import { __decorate, __read, __spread } from "tslib";
import { Pipe } from '@angular/core';
var HighlightSearchMatchPipe = /** @class */ (function () {
    function HighlightSearchMatchPipe() {
    }
    HighlightSearchMatchPipe.prototype.transform = function (value, indexMatches, offset) {
        if (offset === void 0) { offset = 0; }
        // Match null and undefined, but not 0 or ''
        if (value == null || indexMatches == null) {
            return value;
        }
        var transformedValue = '';
        var indexes = indexMatches.reduce(function (a, n) { return n >= offset ? __spread(a, [n - offset]) : a; }, []);
        var _loop_1 = function (i) {
            if (indexes.some(function (item) { return item === i; })) {
                transformedValue += "<mark>" + value[i] + "</mark>";
            }
            else {
                transformedValue += value[i];
            }
        };
        for (var i = 0; i < value.length; i++) {
            _loop_1(i);
        }
        return transformedValue;
    };
    HighlightSearchMatchPipe = __decorate([
        Pipe({ name: 'apHighlightSearchMatch', pure: false })
    ], HighlightSearchMatchPipe);
    return HighlightSearchMatchPipe;
}());
export { HighlightSearchMatchPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0LXNlYXJjaC1tYXRjaC5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1wbGF5Z3JvdW5kLyIsInNvdXJjZXMiOlsibGliL2NvcmUvc2hhcmVkL2hpZ2hsaWdodC1zZWFyY2gtbWF0Y2gucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFHcEQ7SUFBQTtJQW9CQSxDQUFDO0lBbkJHLDRDQUFTLEdBQVQsVUFBVSxLQUFhLEVBQUUsWUFBc0IsRUFBRSxNQUFVO1FBQVYsdUJBQUEsRUFBQSxVQUFVO1FBQ3ZELDRDQUE0QztRQUM1QyxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksWUFBWSxJQUFJLElBQUksRUFBRTtZQUN2QyxPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUVELElBQUksZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQzFCLElBQUksT0FBTyxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLFVBQUssQ0FBQyxHQUFFLENBQUMsR0FBRyxNQUFNLEdBQUUsQ0FBQyxDQUFDLENBQUMsRUFBcEMsQ0FBb0MsRUFBRSxFQUFFLENBQUMsQ0FBQztnQ0FFN0UsQ0FBQztZQUNOLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksS0FBSyxDQUFDLEVBQVYsQ0FBVSxDQUFDLEVBQUU7Z0JBQ2xDLGdCQUFnQixJQUFJLFdBQVMsS0FBSyxDQUFDLENBQUMsQ0FBQyxZQUFTLENBQUM7YUFDbEQ7aUJBQU07Z0JBQ0gsZ0JBQWdCLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2hDOztRQUxMLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRTtvQkFBNUIsQ0FBQztTQU1UO1FBRUQsT0FBTyxnQkFBZ0IsQ0FBQztJQUM1QixDQUFDO0lBbkJRLHdCQUF3QjtRQURwQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsd0JBQXdCLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDO09BQ3pDLHdCQUF3QixDQW9CcEM7SUFBRCwrQkFBQztDQUFBLEFBcEJELElBb0JDO1NBcEJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoeyBuYW1lOiAnYXBIaWdobGlnaHRTZWFyY2hNYXRjaCcsIHB1cmU6IGZhbHNlIH0pXG5leHBvcnQgY2xhc3MgSGlnaGxpZ2h0U2VhcmNoTWF0Y2hQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgdHJhbnNmb3JtKHZhbHVlOiBzdHJpbmcsIGluZGV4TWF0Y2hlczogbnVtYmVyW10sIG9mZnNldCA9IDApOiBhbnkge1xuICAgICAgICAvLyBNYXRjaCBudWxsIGFuZCB1bmRlZmluZWQsIGJ1dCBub3QgMCBvciAnJ1xuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCBpbmRleE1hdGNoZXMgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHRyYW5zZm9ybWVkVmFsdWUgPSAnJztcbiAgICAgICAgbGV0IGluZGV4ZXMgPSBpbmRleE1hdGNoZXMucmVkdWNlKChhLCBuKSA9PiBuID49IG9mZnNldCA/IFsuLi5hLCBuIC0gb2Zmc2V0XSA6IGEsIFtdKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXhlcy5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gaSkpIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1lZFZhbHVlICs9IGA8bWFyaz4ke3ZhbHVlW2ldfTwvbWFyaz5gO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1lZFZhbHVlICs9IHZhbHVlW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWVkVmFsdWU7XG4gICAgfVxufVxuIl19