{"version":3,"sources":["./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/app/customers/customers-grid/customers-grid.component.ts","./src/app/customers/customers-grid/customers-grid.component.html","./src/app/customers/customers-routing.module.ts","./src/app/customers/customers-card/customers-card.component.ts","./src/app/customers/customers-card/customers-card.component.html","./src/app/customers/customers.module.ts"],"names":[],"mappings":"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","file":"customers-customers-module.js","sourcesContent":["import { Component, OnInit, ViewChild, \n  ViewContainerRef, ComponentFactoryResolver, ComponentRef } from '@angular/core';\n\nimport { DataService } from '../core/services/data.service';\nimport { ICustomer, IPagedResults } from '../shared/interfaces';\nimport { FilterService } from '../core/services/filter.service';\nimport { LoggerService } from '../core/services/logger.service';\n\n\n@Component({\n  selector: 'cm-customers',\n  templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n  title: string;\n  filterText: string;\n  customers: ICustomer[] = [];\n  displayMode: DisplayModeEnum;\n  displayModeEnum = DisplayModeEnum;\n  totalRecords = 0;\n  pageSize = 10;\n  mapComponentRef: ComponentRef<any>;\n  _filteredCustomers: ICustomer[] = [];\n\n  get filteredCustomers() {\n    return this._filteredCustomers;\n  }\n\n  set filteredCustomers(value: ICustomer[]) {\n    this._filteredCustomers = value;\n    this.updateMapComponentDataPoints();\n  }\n\n  @ViewChild('mapsContainer', { read: ViewContainerRef }) \n  private mapsViewContainerRef: ViewContainerRef;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n    private dataService: DataService,\n    private filterService: FilterService,\n    private logger: LoggerService) { }\n\n  ngOnInit() {\n    this.title = 'Customers';\n    this.filterText = 'Filter Customers:';\n    this.displayMode = DisplayModeEnum.Card;\n\n    this.getCustomersPage(1);\n  }\n\n  changeDisplayMode(mode: DisplayModeEnum) {\n      this.displayMode = mode;\n  }\n\n  pageChanged(page: number) {\n    this.getCustomersPage(page);\n  }\n\n  getCustomersPage(page: number) {\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\n          this.customers = this.filteredCustomers = response.results;\n          this.totalRecords = response.totalRecords;\n        },\n        (err: any) => this.logger.log(err),\n        () => this.logger.log('getCustomersPage() retrieved customers for page: ' + page));\n  }\n\n  filterChanged(data: string) {\n    if (data && this.customers) {\n        data = data.toUpperCase();\n        const props = ['firstName', 'lastName', 'city', 'state.name'];\n        this.filteredCustomers = this.filterService.filter<ICustomer>(this.customers, data, props);\n    } else {\n      this.filteredCustomers = this.customers;\n    }\n  }\n\n  async lazyLoadMapComponent() {\n    this.changeDisplayMode(DisplayModeEnum.Map);\n    if (!this.mapsViewContainerRef.length) {\n      // Lazy load MapComponent\n      const { MapComponent } = await import('../shared/map/map.component');\n      console.log('Lazy loaded map component!');\n      const component = this.componentFactoryResolver.resolveComponentFactory(MapComponent);\n      this.mapComponentRef = this.mapsViewContainerRef.createComponent(component);\n      this.mapComponentRef.instance.zoom = 2;\n      this.mapComponentRef.instance.dataPoints = this.filteredCustomers;\n      this.mapComponentRef.instance.enabled = true;\n    }\n  }\n\n  updateMapComponentDataPoints() {\n    if (this.mapComponentRef) {\n      this.mapComponentRef.instance.dataPoints = this.filteredCustomers;\n    }\n  }\n\n\n}\n\nenum DisplayModeEnum {\n  Card = 0,\n  Grid = 1,\n  Map = 2\n}\n","<div class=\"customers view indent\">\n    <div class=\"container\">\n        <header>\n            <h3>\n                <span class=\"glyphicon glyphicon-user\"></span>\n                {{ title }}\n            </h3>\n        </header>\n        <br />\n        <div class=\"row\">\n            <div class=\"col-md-10\">\n                <div class=\"navbar\">\n                    <ul class=\"nav navbar-nav\">\n                        <li class=\"toolbar-item\">\n                            <a (click)=\"changeDisplayMode(displayModeEnum.Card)\" [class.active]=\"displayMode === displayModeEnum.Card\">\n                                <span class=\"glyphicon glyphicon-th-large\"></span> Card View\n                            </a>\n                        </li>\n                        <li class=\"toolbar-item\">\n                            <a (click)=\"changeDisplayMode(displayModeEnum.Grid)\" [class.active]=\"displayMode === displayModeEnum.Grid\">\n                                <span class=\"glyphicon glyphicon-align-justify\"></span> List View\n                            </a>\n                        </li>\n                        <li class=\"toolbar-item\">\n                            <a (click)=\"lazyLoadMapComponent()\" [class.active]=\"displayMode === displayModeEnum.Map\">\n                                <span class=\"glyphicon glyphicon-map-marker\"></span> Map View\n                            </a>\n                        </li>\n                        <li class=\"toolbar-item\">\n                            <a routerLink=\"/customers/0/edit\">\n                                <span class=\"glyphicon glyphicon-plus\"></span> New Customer\n                            </a>\n                        </li>\n                    </ul>\n                    <cm-filter-textbox class=\"navbar-right\"\n                     (changed)=\"filterChanged($event)\"></cm-filter-textbox>\n                </div>\n            </div>\n        </div>\n        \n        <cm-customers-card \n          [customers]=\"filteredCustomers\" \n          [hidden]=\"displayMode !== displayModeEnum.Card\"></cm-customers-card>\n    \n        <cm-customers-grid \n          [customers]=\"filteredCustomers\" \n          [hidden]=\"displayMode !== displayModeEnum.Grid\"></cm-customers-grid>\n\n        <!-- lazy load the map component -->\n        <div [hidden]=\"displayMode !== displayModeEnum.Map\">\n            <ng-container #mapsContainer></ng-container>\n        </div>\n\n\n        <cm-pagination\n            [totalItems]=\"totalRecords\" \n            [pageSize]=\"pageSize\" \n            (pageChanged)=\"pageChanged($event)\"></cm-pagination>\n          \n    </div>\n</div>\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { SorterService } from '../../core/services/sorter.service';\nimport { TrackByService } from '../../core/services/trackby.service';\nimport { ICustomer } from '../../shared/interfaces';\n\n@Component({\n  selector: 'cm-customers-grid',\n  templateUrl: './customers-grid.component.html',\n  styleUrls: ['./customers-grid.component.css'],\n  // When using OnPush detectors, then the framework will check an OnPush\n  // component when any of its input properties changes, when it fires\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersGridComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n\n  constructor(private sorterService: SorterService, public trackbyService: TrackByService) { }\n\n  ngOnInit() {\n\n  }\n\n  sort(prop: string) {\n    this.customers = this.sorterService.sort(this.customers, prop);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row grid-container\">\n        <div class=\"col-md-10\">\n            <div class=\"table\">\n                <table class=\"table table-striped table-hover\">\n                    <thead>\n                        <tr>\n                            <th>&nbsp;</th>\n                            <th cmSortBy=\"firstName\" (sorted)=\"sort($event)\">First Name</th>\n                            <th cmSortBy=\"lastName\" (sorted)=\"sort($event)\">Last Name</th>\n                            <th cmSortBy=\"address\" (sorted)=\"sort($event)\">Address</th>\n                            <th cmSortBy=\"city\" (sorted)=\"sort($event)\">City</th>\n                            <th cmSortBy=\"state.name\" (sorted)=\"sort($event)\">State</th>\n                           \n                            <th (click)=\"sort('orderTotal')\">Order Total</th>\n                            <th>&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let customer of customers;trackBy:trackbyService.customer\">\n                            <td><img src=\"assets/images/{{ customer.gender | lowercase }}.png\"\n                                    class=\"grid-image\" alt=\"Customer Image\" /></td>\n                            <td><a [routerLink]=\"['/customers',customer.id,'details']\">{{ customer.firstName | capitalize }}</a></td>\n                            <td>{{ customer.lastName | capitalize }}</td>\n                            <td>{{ customer.address }}</td>\n                            <td>{{ customer.city | trim }}</td>\n                            <td>{{ customer.state.name }}</td>\n                            <td>{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\n                            <td><a [routerLink]=\"['/customers',customer.id,'orders']\">View Orders</a></td>\n                        </tr>\n                        <tr *ngIf=\"!customers.length\">\n                            <td>&nbsp;</td>\n                            <td colspan=\"7\">No Records Found</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomersComponent } from './customers.component';\nimport { CustomersCardComponent } from './customers-card/customers-card.component';\nimport { CustomersGridComponent } from './customers-grid/customers-grid.component';\n\nconst routes: Routes = [\n  { path: '', component: CustomersComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class CustomersRoutingModule {\n  static components = [ CustomersComponent, CustomersCardComponent, CustomersGridComponent ];\n}\n","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { ICustomer } from '../../shared/interfaces';\nimport { TrackByService } from '../../core/services/trackby.service';\n\n@Component({\n  selector: 'cm-customers-card',\n  templateUrl: './customers-card.component.html',\n  styleUrls: [ './customers-card.component.css' ],\n  // When using OnPush detectors, then the framework will check an OnPush\n  // component when any of its input properties changes, when it fires\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomersCardComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n\n  constructor(public trackbyService: TrackByService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n","<div class=\"container\">\n    <div class=\"row card-container\">\n        <div class=\"col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let customer of customers;trackBy:trackbyService.customer\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <a [routerLink]=\"['/customers',customer.id,'details']\" class=\"white\">\n                        {{customer.firstName | capitalize }} {{ customer.lastName | capitalize }} \n                    </a>\n                    <a [routerLink]=\"['/customers',customer.id,'edit']\">\n                        <i title=\"Edit\"  \n                           class=\"pull-right glyphicon glyphicon-edit edit-icon white\"></i>\n                    </a>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"clearfix\">\n                        <div class=\"pull-left card-body-left\">\n                            <a href=\"#\" class=\"white\">\n                                <img src=\"assets/images/{{customer.gender | lowercase}}.png\" class=\"card-image\" />\n                            </a>\n                        </div>\n                        <div class=\"pull-left card-body-right\">\n                            <div class=\"card-body-content\">{{customer.city | trim }}, {{customer.state.name}}</div>\n                            <a [routerLink]=\"['/customers',customer.id,'orders']\">View Orders</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"!customers.length\">\n            No Records Found\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { CustomersRoutingModule } from './customers-routing.module';\n\n@NgModule({\n  imports: [CustomersRoutingModule, SharedModule],\n  declarations: [CustomersRoutingModule.components]\n})\nexport class CustomersModule { }\n"],"sourceRoot":"webpack:///"}